NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'RO') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 10 
NUMBER OF USED VARIABLES : 42 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 52 
	1.  	MOVA R3 L0 
	2.  	ADDI R4 R0 #0 
	3.  	ADD (R3) R0 R4 
	4.  	MOVA R5 L0 
	5.  	ADDI R5 R5 #1 
	6.  	ADDI R6 R0 #1 
	7.  	ADD (R5) R0 R6 
	8.  	MOVA R7 L0 
	9.  	ADDI R7 R7 #2 
	10.  	ADDI R8 R0 #2 
	11.  	ADD (R7) R0 R8 
	12.  	MOVA R9 L0 
	13.  	ADDI R9 R9 #3 
	14.  	ADDI R10 R0 #3 
	15.  	ADD (R9) R0 R10 
	16.  	MOVA R11 L0 
	17.  	ADDI R11 R11 #4 
	18.  	ADDI R12 R0 #4 
	19.  	ADD (R11) R0 R12 
	20.  	MOVA R13 L1 
	21.  	ADDI R14 R0 #0 
	22.  	ADD (R13) R0 R14 
	23.  	MOVA R15 L1 
	24.  	ADDI R15 R15 #1 
	25.  	ADDI R16 R0 #1 
	26.  	ADD (R15) R0 R16 
	27.  	MOVA R17 L1 
	28.  	ADDI R17 R17 #2 
	29.  	ADDI R18 R0 #2 
	30.  	ADD (R17) R0 R18 
	31.  	MOVA R19 L1 
	32.  	ADDI R19 R19 #3 
	33.  	ADDI R20 R0 #3 
	34.  	ADD (R19) R0 R20 
	35.  	MOVA R21 L1 
	36.  	ADDI R21 R21 #4 
	37.  	ADDI R22 R0 #4 
	38.  	ADD (R21) R0 R22 
	39.  	MOVA R23 L1 
	40.  	ADDI R23 R23 #5 
	41.  	ADDI R24 R0 #5 
	42.  	ADD (R23) R0 R24 
	43.  	MOVA R25 L1 
	44.  	ADDI R25 R25 #6 
	45.  	ADDI R26 R0 #6 
	46.  	ADD (R25) R0 R26 
	47.  	MOVA R27 L1 
	48.  	ADDI R27 R27 #7 
	49.  	ADDI R28 R0 #7 
	50.  	ADD (R27) R0 R28 
	51.  	ADDI R29 R0 #-1 
	52.  	ADDI R30 R0 #-1 
--------------------------
[BLOCK 2] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 1 
	1.  L5	ADDI R29 R29 #1 
--------------------------
[BLOCK 3] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 15 
	1.  L6	ADDI R30 R30 #1 
	2.  	MOVA R31 L0 
	3.  	ADD R31 R31 R29 
	4.  	ADD R32 R0 (R31) 
	5.  	SUBI R33 R32 #2 
	6.  	SEQ R33 0 
	7.  	MOVA R34 L1 
	8.  	ADD R34 R34 R30 
	9.  	ADD R35 R0 (R34) 
	10.  	SUBI R36 R35 #2 
	11.  	SEQ R36 0 
	12.  	ANDB R37 R33 R36 
	13.  	SUBI R38 R37 #0 
	14.  	SEQ R38 0 
	15.  	BEQ L7 
--------------------------
[BLOCK 4] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 3 
	1.  	SUBI R39 R30 #8 
	2.  	SLT R39 0 
	3.  	BNE L6 
--------------------------
[BLOCK 5] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 4 
	1.  	ADDI R30 R0 #-1 
	2.  	SUBI R40 R29 #5 
	3.  	SLT R40 0 
	4.  	BNE L5 
--------------------------
[BLOCK 6] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 1 
	1.  	ADDI R29 R0 #-1 
--------------------------
[BLOCK 7] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 4 
	1.  L7	SUBI R41 R38 #0 
	2.  	SEQ R41 0 
	3.  	ANDB R41 R41 R41 
	4.  	BEQ L4 
--------------------------
[BLOCK 8] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 3 
	1.  	ADDI R42 R0 #1 
	2.  	WRITE R42 0 
	3.  	BT L8 
--------------------------
[BLOCK 9] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 2 
	1.  L4	ADDI R43 R0 #0 
	2.  	WRITE R43 0 
--------------------------
[BLOCK 10] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 1 
	1.  L8	HALT 
**************************


