NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'RO') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 11 
NUMBER OF USED VARIABLES : 15 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 6 
	1.  	READ R1 0 
	2.  	READ R3 0 
	3.  	SUBI R5 R3 #0 
	4.  	SEQ R5 0 
	5.  	ANDB R5 R5 R5 
	6.  	BEQ L4 
--------------------------
[BLOCK 2] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 3 
	1.  	ADDI R6 R0 #0 
	2.  	WRITE R6 0 
	3.  	HALT 
--------------------------
[BLOCK 3] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 4 
	1.  L4	SUBI R7 R3 #0 
	2.  	SLT R7 0 
	3.  	ANDB R7 R7 R7 
	4.  	BEQ L5 
--------------------------
[BLOCK 4] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 4 
	1.  	ADDI R4 R0 #1 
	2.  	SUB R8 R0 R3 
	3.  	ADD R3 R0 R8 
	4.  	BT L6 
--------------------------
[BLOCK 5] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 1 
	1.  L5	ADDI R4 R0 #0 
--------------------------
[BLOCK 6] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 1 
	1.  L6	ADD R2 R0 R1 
--------------------------
[BLOCK 7] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 4 
	1.  L7	SUBI R9 R3 #1 
	2.  	SGT R9 0 
	3.  	ANDB R9 R9 R9 
	4.  	BEQ L8 
--------------------------
[BLOCK 8] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 5 
	1.  	MUL R10 R2 R1 
	2.  	ADD R2 R0 R10 
	3.  	SUBI R11 R3 #1 
	4.  	ADD R3 R0 R11 
	5.  	BT L7 
--------------------------
[BLOCK 9] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 4 
	1.  L8	SUBI R12 R4 #1 
	2.  	SEQ R12 0 
	3.  	ANDB R12 R12 R12 
	4.  	BEQ L9 
--------------------------
[BLOCK 10] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 3 
	1.  	ADDI R14 R0 #1 
	2.  	DIV R13 R14 R2 
	3.  	ADD R2 R0 R13 
--------------------------
[BLOCK 11] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 2 
	1.  L9	WRITE R2 0 
	2.  	HALT 
**************************


